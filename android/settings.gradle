// rootProject.name = 'buyer'
// def findNativeModulesGradle() {
//   def candidates = [
//     file("../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"),
//     file("../node_modules/@react-native/cli-platform-android/native_modules.gradle"),
//     file("../node_modules/react-native/node_modules/@react-native-community/cli-platform-android/native_modules.gradle"),
//     file("../node_modules/react-native/node_modules/@react-native/cli-platform-android/native_modules.gradle")
//   ]
//   for (c in candidates) {
//     if (c.exists()) {
//       return c
//     }
//   }
//   return null
// }

// def nativeModulesGradle = findNativeModulesGradle()
// if (nativeModulesGradle != null) {
//   apply from: nativeModulesGradle
// } else {
//   // fallback: attempt the older path used by some templates
//   def alt = file("../node_modules/@react-native-community/cli-platform-android/native_modules.gradle")
//   if (alt.exists()) {
//     apply from: alt
//   } else {
//     // If you reach here, we log a warning but do not hard-fail to ease local dev.
//     println "WARNING: native_modules.gradle not found in expected locations. Some native modules may not autolink."
//   }
// }
// include ':app'
// includeBuild('../node_modules/@react-native/gradle-plugin')


// include ':react-native-vector-icons'
// project(':react-native-vector-icons').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-vector-icons/android')
// include ':react-native-onesignal'
// project(':react-native-onesignal').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-onesignal/android')
// include ':react-native-maps'
// project(':react-native-maps').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-maps/android')













pluginManagement {
    // ensure the react-native gradle plugin is available to settings plugin
    includeBuild("../node_modules/@react-native/gradle-plugin")
}

plugins {
    // apply the React settings plugin used by newer RN versions
    id("com.facebook.react.settings") apply true
}

// allow the React plugin to autolink libraries when run via the RN CLI
// (keeps compatibility with `npx react-native config` / autolinking flow)
extensions.configure(com.facebook.react.ReactSettingsExtension) { ex ->
    ex.autolinkLibrariesFromCommand()
}

rootProject.name = 'buyer'
include ':app'

// Keep the gradle plugin included so the android build can use it
includeBuild('../node_modules/@react-native/gradle-plugin')

/*
 Fallback for older autolinking: if native_modules.gradle exists at one of the
 common paths, apply it. This prevents breaking older community modules that
 still rely on that script.
*/
def findNativeModulesGradle() {
    def candidates = [
        file("../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"),
        file("../node_modules/@react-native/cli-platform-android/native_modules.gradle"),
        file("../node_modules/react-native/node_modules/@react-native-community/cli-platform-android/native_modules.gradle"),
        file("../node_modules/react-native/node_modules/@react-native/cli-platform-android/native_modules.gradle")
    ]
    for (c in candidates) {
        if (c.exists()) {
            return c
        }
    }
    return null
}

def nativeModulesGradle = findNativeModulesGradle()
if (nativeModulesGradle != null) {
    apply from: nativeModulesGradle
} else {
    println "WARNING: native_modules.gradle not found in expected locations. Some native modules may not autolink."
}

/***************
 * Manual includes for packages that require explicit project mapping.
 * If those libraries support autolinking with your RN version you can remove these,
 * otherwise keep them to ensure they're present on the Gradle project graph.
 ***************/
include ':react-native-vector-icons'
project(':react-native-vector-icons').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-vector-icons/android')

include ':react-native-onesignal'
project(':react-native-onesignal').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-onesignal/android')

include ':react-native-maps'
project(':react-native-maps').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-maps/android')

