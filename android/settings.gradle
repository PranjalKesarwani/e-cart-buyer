rootProject.name = 'buyer'
def findNativeModulesGradle() {
  def candidates = [
    file("../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"),
    file("../node_modules/@react-native/cli-platform-android/native_modules.gradle"),
    file("../node_modules/react-native/node_modules/@react-native-community/cli-platform-android/native_modules.gradle"),
    file("../node_modules/react-native/node_modules/@react-native/cli-platform-android/native_modules.gradle")
  ]
  for (c in candidates) {
    if (c.exists()) {
      return c
    }
  }
  return null
}

def nativeModulesGradle = findNativeModulesGradle()
if (nativeModulesGradle != null) {
  apply from: nativeModulesGradle
} else {
  // fallback: attempt the older path used by some templates
  def alt = file("../node_modules/@react-native-community/cli-platform-android/native_modules.gradle")
  if (alt.exists()) {
    apply from: alt
  } else {
    // If you reach here, we log a warning but do not hard-fail to ease local dev.
    println "WARNING: native_modules.gradle not found in expected locations. Some native modules may not autolink."
  }
}
include ':app'
includeBuild('../node_modules/@react-native/gradle-plugin')


include ':react-native-vector-icons'
project(':react-native-vector-icons').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-vector-icons/android')
include ':react-native-onesignal'
project(':react-native-onesignal').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-onesignal/android')
include ':react-native-maps'
project(':react-native-maps').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-maps/android')
